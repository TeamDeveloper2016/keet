<?xml version="1.0" encoding="ISO-8859-1" ?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:p="http://primefaces.org/ui"
                xmlns:pe="http://primefaces.org/ui/extensions"
                template="/WEB-INF/plantillas/accion.xhtml">
  <ui:param name="titulo" value="Registro de empleados en el desarrollo" />
  <ui:define name="librerias">
    <script type="text/javascript">
      Janal.Control.fields = {        
				'tabla\\:puesto'      : {validaciones: 'libre', mascara: 'libre', grupo: 'general'},
				'tabla\\:departamento': {validaciones: 'libre', mascara: 'libre', grupo: 'general'},				
				'tabla\\:contratista' : {validaciones: 'libre', mascara: 'libre', grupo: 'general'}				
      };							
			
			function validateCriterios(){
				var ok= janal.execute();
				if(ok)
					janal.bloquear();
				return ok;
			} // validateCriterios
    </script>		
		<style type="text/css">    			
			.ui-picklist .ui-picklist-item {
				cursor: default !important;
				border: 0 none;
				font-weight: inherit;
				width: 90% !important;
				pointer-events: none;
			}
			.ui-picklist .ui-picklist-filter {
				width: 100% !important;
			}
			.ui-picklist-button-add-all{
				display: none !important
			}
			.ui-picklist-button-remove-all{
				display: none !important
			}
			.ui-picklist table {				
				border-collapse: collapse;
				width: 0%;
			}
			.ui-chkbox {
				display: inline-block;
				vertical-align: middle;
				cursor: default !important;
				pointer-events: auto !important;				
			}
    </style>
  </ui:define>
  <ui:define name="contenido">				
    <div class="ui-grid ui-grid-responsive" style="overflow-y:hidden;">			
			<div class="ui-grid-row janal-grid-row">								
				<div id="collapse-content" class="ui-grid-col-12">
					<p:accordionPanel id="tabla" activeIndex="1" multiple="true">
						<p:tab title="[ #{keetCatalogosContratosPersonalRegistro.registroDesarrollo.desarrollo.clave} ] #{keetCatalogosContratosPersonalRegistro.registroDesarrollo.desarrollo.nombres}">
							<p:panelGrid id="panelDetalle" columns="1" styleClass="janal-wid-100" columnClasses="janal-wid-100">																
								<p:outputLabel value="Descripcion:"/>
								<p:inputText value="#{keetCatalogosContratosPersonalRegistro.registroDesarrollo.desarrollo.descripcion}" styleClass="janal-wid-100-txt" readonly="true"/>
								<p:outputLabel value="Domicilio:"/>																		
								<p:inputText value="#{keetCatalogosContratosPersonalRegistro.attrs.domicilio}" styleClass="janal-wid-100-txt" readonly="true"/>
							</p:panelGrid>										
						</p:tab>					
						<p:tab title="Busqueda">
							<p:panelGrid id="panelBusqueda" columns="1" styleClass="janal-wid-100" columnClasses="janal-wid-100">																															
								<p:outputLabel for="departamento" value="Departamento:"/>
								<p:selectOneMenu id="departamento" value="#{keetCatalogosContratosPersonalRegistro.attrs.idDepartamento}" styleClass="janal-wid-100-txt" filter="true" filterMatchMode="custom" filterFunction="janal.contains">									
									<p:ajax event="change" onstart="return janal.bloquear();" process="@this tabla" listener="#{keetCatalogosContratosPersonalRegistro.doLoad}" update="dataEmpleados" oncomplete="janal.desbloquear();"/>
									<f:selectItems value="#{keetCatalogosContratosPersonalRegistro.attrs.departamentos}"/>
								</p:selectOneMenu>								
								<p:outputLabel for="puesto" value="Puesto:"/>
								<p:selectOneMenu id="puesto" value="#{keetCatalogosContratosPersonalRegistro.attrs.idPuesto}" styleClass="janal-wid-100-txt" filter="true" filterMatchMode="custom" filterFunction="janal.contains">									
									<p:ajax event="change" onstart="return janal.bloquear();" process="@this tabla" listener="#{keetCatalogosContratosPersonalRegistro.doLoad}" update="dataEmpleados" oncomplete="janal.desbloquear();"/>
									<f:selectItems value="#{keetCatalogosContratosPersonalRegistro.attrs.puestos}"/>
								</p:selectOneMenu>																
								<p:outputLabel for="contratista" value="Contratista:"/>
								<p:selectOneMenu id="contratista" value="#{keetCatalogosContratosPersonalRegistro.attrs.idContratista}" var="item" converter="janal.convertidor.Entity" styleClass="janal-wid-100-txt" effect="fade" filter="true" filterMatchMode="custom" filterFunction="janal.contains">									
									<p:ajax event="change" onstart="return janal.bloquear();" process="@this tabla" listener="#{keetCatalogosContratosPersonalRegistro.doLoad}" update="dataEmpleados" oncomplete="janal.desbloquear();"/>
									<f:selectItems value="#{keetCatalogosContratosPersonalRegistro.attrs.contratistas}" var="element" itemValue="#{element}" itemLabel="#{element.nombre} #{empty element.nombres or element.nombres eq ''? '': '|'} #{element.nombres}"/>
									<p:column headerText="Departamento">
										<h:outputText value="#{item.nombre}"/>
									</p:column> 
									<p:column headerText="Puesto">
										<h:outputText value="#{item.puesto}"/>
									</p:column> 
									<p:column headerText="Nombre">
										<h:outputText value="#{item.nombres}"/>
									</p:column>   
								</p:selectOneMenu>																	
							</p:panelGrid>										
						</p:tab>
					</p:accordionPanel>	
					<p:spacer/>
					<p:pickList id="dataEmpleados" value="#{keetCatalogosContratosPersonalRegistro.model}" var="empleado" effect="bounce" itemValue="#{empleado}" itemLabel="#{empleado.item}" showCheckbox="true" showSourceFilter="true" showTargetFilter="true" filterMatchMode="contains" converter="janal.convertidor.SelectionItem" responsive="true">
						<f:facet name="sourceCaption">[#{keetCatalogosContratosPersonalRegistro.attrs.totalDisponibles}] Disponibles</f:facet>
						<f:facet name="targetCaption">[#{keetCatalogosContratosPersonalRegistro.attrs.totalAsignados}] Asignados</f:facet>
						<p:ajax event="transfer" onstart="return janal.bloquear();" listener="#{keetCatalogosContratosPersonalRegistro.onTransfer}" oncomplete="reloadValues();"/>												
						<p:column style="width: 95% !important">
							<h:graphicImage library="janal" name="icon/semaforos/#{empleado.idActivo eq '2'? 'circulo-rojo': (empleado.idActivo eq '1' and empleado.idNomina eq '2' and empleado.idSeguro eq '2'? 'circulo-amarillo': (empleado.idActivo eq '1' and empleado.idNomina eq '2'? 'circulo-azul': 'circulo-verde'))}.png" title="Empleado #{empleado.idActivo eq '1' ? '': 'NO '}activo"/>
							<p:spacer width="3px"/>
							<h:outputText value=" #{empleado.item}" styleClass="janal-wid-100-txt"/>
						</p:column>
					</p:pickList>
					<p:remoteCommand name="reloadValues" actionListener="#{keetCatalogosContratosPersonalRegistro.doLoad}" process="@this tabla" update="dataEmpleados" oncomplete="janal.desbloquear();"/>
				</div>						        
      </div>
    </div>		           							
  </ui:define>
	<ui:define name="acciones">
		<div class="lg-pantalla">
			<p:commandButton id="aceptar" value="Aceptar" icon="fa fa-check" accesskey="a"  process="@form" action="#{keetCatalogosContratosPersonalRegistro.doAceptar}" onstart="return validateCriterios();" oncomplete="janal.desbloquear()" rendered="false"/>
			<p:commandButton id="cancelar" value="Regresar" icon="fa fa-rotate-left" accesskey="r" process="@this" action="#{keetCatalogosContratosPersonalRegistro.doCancelar}" ajax="false" onstart="janal.bloquear()" oncomplete="janal.desbloquear()"/>
		</div>		
		<div class="xs-pantalla">
			<p:commandButton id="aceptarIcon" title="Aceptar" icon="fa fa-check" process="@form" action="#{keetCatalogosContratosPersonalRegistro.doAceptar}" onstart="return validateCriterios();" oncomplete="janal.desbloquear()" rendered="false"/>
			<p:commandButton id="cancelarIcon" title="Regresar" icon="fa fa-rotate-left" process="@this" action="#{keetCatalogosContratosPersonalRegistro.doCancelar}" ajax="false" onstart="janal.bloquear()" oncomplete="janal.desbloquear()"/>
		</div>		
	</ui:define>
</ui:composition>
