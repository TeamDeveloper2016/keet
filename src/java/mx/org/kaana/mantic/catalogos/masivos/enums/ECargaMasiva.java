package mx.org.kaana.mantic.catalogos.masivos.enums;

import java.io.Serializable;

/**
 *@company KAANA
 *@project KAJOOL (Control system polls)
 *@date 13/12/2018
 *@time 04:38:57 PM 
 *@author Team Developer 2016 <team.developer@kaana.org.mx>
 */
public enum ECargaMasiva implements Serializable {
	
	ARTICULOS(1L, "CODIGO|CODIGOAUXILIAR|NOMBRE|FAMILIA|COSTOS/IVA|MENUDEONETO|MEDIONETO|MAYOREONETO|UNIDADMEDIDA|IVA|LIMITEMENUDEO|LIMITEMAYOREO|STOCKMINIMO|STOCKMAXIMO|SAT", "CODIGO,CODIGO,AUXILIAR,NOMBRE,FAMILIA,COSTO S/IVA,MENUDEO NETO,MEDIO NETO,MAYOREO NETO,UNIDAD MEDIDA,IVA,LIMITE MENUDEO,LIMITE MAYOREO,STOCK MINIMO,STOCK MAXIMO,SAT", 15, 1000, "masivo-articulos.xls"), 
	CLIENTES(2L, "RFC|CLAVE|RAZONSOCIAL|USOCFDI|TELEFONO|CORREO1|CORREO2|ENTIDAD|MUNICIPIO|COLONIA|CALLE|NUMERO|CODIGOPOSTAL", "RFC,CLAVE,RAZON SOCIAL,USO CFDI,TELEFONO,CORREO 1,CORREO 2,ENTIDAD,MUNICIPIO,COLONIA,CALLE,NUMERO,CODIGOPOSTAL", 13, 50, "masivo-clientes.xls"), 
	PROVEEDORES(3L, "RFC|CLAVE|RAZONSOCIAL|TELEFONO|CORREO1|CORREO2|ENTIDAD|MUNICIPIO|COLONIA|CALLE|NUMERO|CODIGOPOSTAL", "RFC,CLAVE,RAZON SOCIAL,TELEFONO,CORREO 1,CORREO 2,ENTIDAD,MUNICIPIO,COLONIA,CALLE,NUMERO,CODIGOPOSTAL", 12, 50, "masivo-proveedores.xls"),
	REFACCIONES(4L, "CODIGO|NOMBRE|HERRAMIENTA|COSTONETO|IVA", "CODIGO,NOMBRE,HERRAMIENTA,COSTO NETO,IVA", 5, 500, "masivo-refacciones.xls"),
	SERVICIOS(5L, "CODIGO|NOMBRE|COSTONETO|IVA", "CODIGO,NOMBRE,COSTO NETO,IVA", 4, 100, "masivo-servicios.xls"),
	EGRESOS(6L, "FECHA|DESCRIPCION|IMPORTE", "FECHA,DESCRIPCION,IMPORTE", 3, 500, "masivo-egresos.xls"),
	CONTEOS(7L, "ALMACEN|CODIGO|NOMBRE|STOCKMINIMO|STOCKMAXIMO|STOCK", "ALMACEN,CODIGO,NOMBRE,STOCK MINIMO,STOCK MAXIMO,STOCK", 6, 500, "masivo-conteos.xls"),
	CODIGOS(8L, "PROVEEDOR|CODIGOPROPIO|CODIGOPROVEEDOR|MULTIPLO", "PROVEEDOR,CODIGO PROPIO,CODIGO PROVEEDOR,MULTIPLO", 4, 500, "masivo-codigos.xls"),
	ESTACIONES(9L, "MANZANA|LOTE|CODIGO|NOMBRE|CANTIDAD|COSTOS/IVA|UNIDADMEDIDA|INICIO|TERMINO|ANTICIPO", "MANZANA,LOTE,CODIGO,NOMBRE,CANTIDAD,COSTO S/IVA,UNIDAD MEDIDA,INICIO,TERMINO,ANTICIPO", 10, 500, "masivo-estaciones.xls"),
	PERSONAL(10L, "CLAVE|NOMBRE|ACTIVO|SUELDO|REINGRESO/BAJA|PUESTO|DEPARTAMENTO|CONTRATISTA", "CLAVE,NOMBRE,ACTIVO,SUELDO,REINGRESO/BAJA,PUESTO,DEPARTAMENTO,CONTRATISTA", 8, 500, "masivo-personal.xls"),
	PLANTILLAS(11L, "MANZANA|LOTE|CODIGO|NOMBRE|CANTIDAD|COSTOS/IVA|UNIDADMEDIDA|INICIO|TERMINO", "MANZANA,LOTE,CODIGO,NOMBRE,CANTIDAD,COSTO S/IVA,UNIDAD MEDIDA,INICIO,TERMINO", 9, 500, "masivo-plantillas.xls"),
	MATERIALES(12L, "MANZANA|LOTE|CODIGO|NOMBRE|CANTIDAD|COSTOS/IVA|UNIDADMEDIDA", "MANZANA,LOTE,CODIGO,NOMBRE,CANTIDAD,COSTO S/IVA,UNIDAD MEDIDA", 7, 500, "masivo-materiales.xls"),
	PRECIOS(13L, "RFC|RAZONSOCIAL|CLAVE|AUXILIAR|MATERIAL|PRECIOBASE|PRECIOLISTA|PRECIOESPECIAL", "RFC,RAZONSOCIAL,CLAVE,AUXILIAR,MATERIAL,PRECIOBASE,PRECIOLISTA,PRECIOESPECIAL", 8, 500, "masivo-precios-proveedores.xls"),
	PRECIOS_CONVENIO(14L, "RFCPROVEEDOR|PROVEEDOR|RFCCLIENTE|CLIENTE|CLAVE|AUXILIAR|MATERIAL|PRECIOCONVENIO", "RFCPROVEEDOR,PROVEEDOR,RFCCLIENTE,CLIENTE,CLAVE,AUXILIAR,MATERIAL,PRECIOCONVENIO", 8, 500, "masivo-precios-clientes.xls"),
	MATERIAL(15L, "CODIGO|CODIGOAUXILIAR|NOMBRE|FAMILIA|COSTOS/IVA|UNIDADMEDIDA|IVA|STOCKMINIMO|STOCKMAXIMO", "CODIGO,CODIGO AUXILIAR,NOMBRE,FAMILIA,COSTO S/IVA,UNIDAD MEDIDA,IVA,STOCK MINIMO,STOCK MAXIMO", 9, 1000, "masivo-articulos.xls"),
	CONTROLES(16L, "MANZANA|LOTE|CODIGO|NOMBRE|CANTIDAD|COSTOS/IVA|UNIDADMEDIDA|INICIO|TERMINO", "MANZANA,LOTE,CODIGO,NOMBRE,CANTIDAD,COSTO S/IVA,UNIDAD MEDIDA,INICIO,TERMINO", 9, 500, "masivo-controles.xls"),
	PLANEACION(17L, "CONTRATO|PROTOTIPO|CODIGO|NOMBRE|CANTIDAD|PRECIOUNITARIO", "CONTRATO,PROTOTIPO,CODIGO,NOMBRE,CANTIDAD,PRECIO UNITARIO", 6, 1000, "masivo-materiales-contratos.xls");
	
	private final Long id;
	private final String fields;
	private final String titles;
	private final Integer columns;
	private final Integer tuplas;
	private final String file;
	
	private ECargaMasiva(Long id, String fields, String titles, Integer columns, Integer tuplas, String file) {
		this.id= id;
		this.fields= fields;
		this.titles= titles;
		this.columns= columns;
		this.tuplas = tuplas;
		this.file = file;
	}

	public Long getId() {
		return id;
	}

	public String getFields() {
		return fields;
	}

	public String getTitles() {
		return titles;
	}

	public Integer getColumns() {
		return columns;
	}

	public Integer getTuplas() {
		return tuplas;
	}

	public String getFile() {
		return file;
	}
	
}
